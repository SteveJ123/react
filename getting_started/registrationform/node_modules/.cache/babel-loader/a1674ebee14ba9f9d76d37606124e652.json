{"ast":null,"code":"import _classCallCheck from \"D:\\\\jana\\\\Front End Development\\\\test\\\\slider\\\\react_path_pluralsight\\\\getting_started\\\\registrationform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\jana\\\\Front End Development\\\\test\\\\slider\\\\react_path_pluralsight\\\\getting_started\\\\registrationform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\jana\\\\Front End Development\\\\test\\\\slider\\\\react_path_pluralsight\\\\getting_started\\\\registrationform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\jana\\\\Front End Development\\\\test\\\\slider\\\\react_path_pluralsight\\\\getting_started\\\\registrationform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\jana\\\\Front End Development\\\\test\\\\slider\\\\react_path_pluralsight\\\\getting_started\\\\registrationform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\jana\\\\Front End Development\\\\test\\\\slider\\\\react_path_pluralsight\\\\getting_started\\\\registrationform\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\jana\\\\Front End Development\\\\test\\\\slider\\\\react_path_pluralsight\\\\getting_started\\\\registrationform\\\\src\\\\components\\\\FillForm.js\";\nimport React from \"react\";\n\nvar FillForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FillForm, _React$Component);\n\n  function FillForm() {\n    var _this;\n\n    _classCallCheck(this, FillForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FillForm).call(this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      username: \",\",\n      email: \"\",\n      mobile: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(FillForm, [{\n    key: \"handleChange\",\n    value: function handleChange(synthEvent) {\n      console.log('synthevent', synthEvent); //     if (event.target.value === \"\") {\n      //       alert(`input ${event.target.name} is empty`);\n      //       return false;\n      //     }\n      //     const name = event.target.name;\n      //     const value = event.target.value;\n      //     this.setState({\n      //       [name]: value\n      //     });\n      //   }\n      //   userNameValidation(username) {\n      //     var regexp = new RegExp(\"^[a-zA-Z]+$\");\n      //     if (username.match(regexp)) {\n      //       alert(\"name entered is correct\");\n      //       //   return true;\n      //     } else {\n      //       alert(\"enter the correct name\");\n      //       //   return false;\n      //     }\n      //   }\n      //   emailValidation(email) {\n      //     var emailvalid = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      //     if (email.match(emailvalid)) {\n      //       alert(\"Email Validation: Successful.\");\n      //       // return true;\n      //     } else {\n      //       alert(\"check email entered\");\n      //       // return false;\n      //     }\n      //   }\n      //   mobileValidation(mobile) {\n      //     var phoneno = /^\\d{10}$/;\n      //     if (mobile.match(phoneno)) {\n      //       alert(\"mobile number is correct\");\n      //       //   return true;\n      //     } else {\n      //       alert(\"check mobile number\");\n      //       //   return false;\n      //     }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault(); // console.log(\"event\", event.target);\n\n      var username = event.target.username.value;\n      var email = event.target.email.value;\n      var mobile = event.target.mobile.value; //input box is empty\n\n      if (username === \"\" || email === \"\" || mobile === \"\" || event.target.password.value === \"\") {\n        alert(\"input is empty\"); //   return false;\n      } //input box all text entered or number typed with name - user name\n\n\n      if (username) {\n        this.userNameValidation(username);\n      }\n\n      if (email) {\n        this.emailValidation(email);\n      }\n\n      if (mobile) {\n        this.mobileValidation(mobile);\n      }\n\n      console.log(\"event\", this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      {\n        console.log(\"fill form\", new FillForm());\n      }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"container\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"USER\"), React.createElement(\"input\", {\n        id: \"username\",\n        name: \"username\",\n        placeholder: \"Name\",\n        onChange: this.handleChange,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"EMAIL\",\n        onChange: this.handleChange,\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"mobile\",\n        name: \"mobile\",\n        placeholder: \"Mobile\",\n        onChange: this.handleChange,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: this.handleChange,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        id: \"register\",\n        value: \"REGISTER\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FillForm;\n}(React.Component);\n\nexport default FillForm;","map":{"version":3,"sources":["D:\\jana\\Front End Development\\test\\slider\\react_path_pluralsight\\getting_started\\registrationform\\src\\components\\FillForm.js"],"names":["React","FillForm","handleSubmit","bind","handleChange","state","username","email","mobile","password","synthEvent","console","log","event","preventDefault","target","value","alert","userNameValidation","emailValidation","mobileValidation","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass FillForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      username: \",\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n\r\n    handleChange(synthEvent) {\r\n        console.log('synthevent', synthEvent);\r\n//     if (event.target.value === \"\") {\r\n//       alert(`input ${event.target.name} is empty`);\r\n//       return false;\r\n//     }\r\n//     const name = event.target.name;\r\n//     const value = event.target.value;\r\n//     this.setState({\r\n//       [name]: value\r\n//     });\r\n//   }\r\n//   userNameValidation(username) {\r\n//     var regexp = new RegExp(\"^[a-zA-Z]+$\");\r\n//     if (username.match(regexp)) {\r\n//       alert(\"name entered is correct\");\r\n//       //   return true;\r\n//     } else {\r\n//       alert(\"enter the correct name\");\r\n//       //   return false;\r\n//     }\r\n//   }\r\n//   emailValidation(email) {\r\n//     var emailvalid = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n//     if (email.match(emailvalid)) {\r\n//       alert(\"Email Validation: Successful.\");\r\n//       // return true;\r\n//     } else {\r\n//       alert(\"check email entered\");\r\n//       // return false;\r\n//     }\r\n//   }\r\n\r\n//   mobileValidation(mobile) {\r\n//     var phoneno = /^\\d{10}$/;\r\n//     if (mobile.match(phoneno)) {\r\n//       alert(\"mobile number is correct\");\r\n//       //   return true;\r\n//     } else {\r\n//       alert(\"check mobile number\");\r\n//       //   return false;\r\n//     }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    // console.log(\"event\", event.target);\r\n    var username = event.target.username.value;\r\n    var email = event.target.email.value;\r\n    var mobile = event.target.mobile.value;\r\n    //input box is empty\r\n    if (\r\n      username === \"\" ||\r\n      email === \"\" ||\r\n      mobile === \"\" ||\r\n      event.target.password.value === \"\"\r\n    ) {\r\n      alert(`input is empty`);\r\n      //   return false;\r\n    }\r\n    //input box all text entered or number typed with name - user name\r\n    if (username) {\r\n      this.userNameValidation(username);\r\n    }\r\n\r\n    if (email) {\r\n      this.emailValidation(email);\r\n    }\r\n\r\n    if (mobile) {\r\n      this.mobileValidation(mobile);\r\n    }\r\n\r\n    console.log(\"event\", this.state);\r\n  }\r\n\r\n  render() {\r\n    {\r\n      console.log(\"fill form\", new FillForm());\r\n    }\r\n    return (\r\n      <div>\r\n        <form className=\"container\" onSubmit={this.handleSubmit}>\r\n          <h1>USER</h1>\r\n          <input\r\n            id=\"username\"\r\n            name=\"username\"\r\n            placeholder=\"Name\"\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n          />\r\n\r\n          <input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"EMAIL\"\r\n            onChange={this.handleChange}\r\n            type=\"email\"\r\n          />\r\n\r\n          <input\r\n            id=\"mobile\"\r\n            name=\"mobile\"\r\n            placeholder=\"Mobile\"\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n          />\r\n\r\n          <input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={this.handleChange}\r\n            type=\"password\"\r\n          />\r\n\r\n          <input type=\"submit\" id=\"register\" value=\"REGISTER\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FillForm;\r\n"]},"metadata":{},"sourceType":"module"}